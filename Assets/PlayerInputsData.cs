//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Data/Inputs/PlayerInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputsData : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputsData()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputs"",
    ""maps"": [
        {
            ""name"": ""DefaultGameplay"",
            ""id"": ""419207cc-b4b9-42c2-92c4-b04be323427d"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Button"",
                    ""id"": ""e80734f5-885e-46b1-b108-d0ce8e098469"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""80752687-0753-4aef-807f-da820867c345"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""ScaleVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""49749d51-f289-4f86-95b0-cdcb4b79f5c4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""84a04eac-1a81-4320-be1f-9b07ecfd0fef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""ZQSD"",
                    ""id"": ""cc7ef498-9974-4edd-96fb-619c5eb30e32"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""fcc8da47-d05b-4e60-8826-974f8538eda0"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2c13cffd-e604-41e7-ab74-17f2862b5f5c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""72e223d4-1e9c-4d47-9078-5f482c12dc99"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""64309f63-ba71-46e3-bcc9-f618d4c99412"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""918e64a4-b34f-4f6b-8c70-c936c931c093"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5f6f01d4-4e9f-4563-be09-4fb622ec0dd3"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""24e31009-832f-4998-9e76-edb939f40209"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""fce2c546-0972-4804-bc9b-63eb9fbf4f5a"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""cd8d6472-b336-4d3e-adea-742dd52d9b8d"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""537a933b-c3a9-4b0d-b3e5-375dcbf03c68"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e4a6b508-9055-49bb-b5a9-f6a645c22740"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""79e8763b-1beb-4404-a65f-67dde0d4ed29"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""baafb0ea-7c82-4a9e-b497-83ad3f82c5bd"",
                    ""path"": ""<Keyboard>/rightShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df512498-1900-463f-9e25-0aa9cef1012b"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""SliceView"",
            ""id"": ""ef057058-52dd-4cf9-904a-9f8c8109ab88"",
            ""actions"": [],
            ""bindings"": []
        }
    ],
    ""controlSchemes"": []
}");
        // DefaultGameplay
        m_DefaultGameplay = asset.FindActionMap("DefaultGameplay", throwIfNotFound: true);
        m_DefaultGameplay_Movement = m_DefaultGameplay.FindAction("Movement", throwIfNotFound: true);
        m_DefaultGameplay_Look = m_DefaultGameplay.FindAction("Look", throwIfNotFound: true);
        m_DefaultGameplay_Jump = m_DefaultGameplay.FindAction("Jump", throwIfNotFound: true);
        m_DefaultGameplay_Sprint = m_DefaultGameplay.FindAction("Sprint", throwIfNotFound: true);
        // SliceView
        m_SliceView = asset.FindActionMap("SliceView", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // DefaultGameplay
    private readonly InputActionMap m_DefaultGameplay;
    private IDefaultGameplayActions m_DefaultGameplayActionsCallbackInterface;
    private readonly InputAction m_DefaultGameplay_Movement;
    private readonly InputAction m_DefaultGameplay_Look;
    private readonly InputAction m_DefaultGameplay_Jump;
    private readonly InputAction m_DefaultGameplay_Sprint;
    public struct DefaultGameplayActions
    {
        private @PlayerInputsData m_Wrapper;
        public DefaultGameplayActions(@PlayerInputsData wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_DefaultGameplay_Movement;
        public InputAction @Look => m_Wrapper.m_DefaultGameplay_Look;
        public InputAction @Jump => m_Wrapper.m_DefaultGameplay_Jump;
        public InputAction @Sprint => m_Wrapper.m_DefaultGameplay_Sprint;
        public InputActionMap Get() { return m_Wrapper.m_DefaultGameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DefaultGameplayActions set) { return set.Get(); }
        public void SetCallbacks(IDefaultGameplayActions instance)
        {
            if (m_Wrapper.m_DefaultGameplayActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_DefaultGameplayActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_DefaultGameplayActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_DefaultGameplayActionsCallbackInterface.OnMovement;
                @Look.started -= m_Wrapper.m_DefaultGameplayActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_DefaultGameplayActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_DefaultGameplayActionsCallbackInterface.OnLook;
                @Jump.started -= m_Wrapper.m_DefaultGameplayActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_DefaultGameplayActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_DefaultGameplayActionsCallbackInterface.OnJump;
                @Sprint.started -= m_Wrapper.m_DefaultGameplayActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_DefaultGameplayActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_DefaultGameplayActionsCallbackInterface.OnSprint;
            }
            m_Wrapper.m_DefaultGameplayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
            }
        }
    }
    public DefaultGameplayActions @DefaultGameplay => new DefaultGameplayActions(this);

    // SliceView
    private readonly InputActionMap m_SliceView;
    private ISliceViewActions m_SliceViewActionsCallbackInterface;
    public struct SliceViewActions
    {
        private @PlayerInputsData m_Wrapper;
        public SliceViewActions(@PlayerInputsData wrapper) { m_Wrapper = wrapper; }
        public InputActionMap Get() { return m_Wrapper.m_SliceView; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SliceViewActions set) { return set.Get(); }
        public void SetCallbacks(ISliceViewActions instance)
        {
            if (m_Wrapper.m_SliceViewActionsCallbackInterface != null)
            {
            }
            m_Wrapper.m_SliceViewActionsCallbackInterface = instance;
            if (instance != null)
            {
            }
        }
    }
    public SliceViewActions @SliceView => new SliceViewActions(this);
    public interface IDefaultGameplayActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
    }
    public interface ISliceViewActions
    {
    }
}
